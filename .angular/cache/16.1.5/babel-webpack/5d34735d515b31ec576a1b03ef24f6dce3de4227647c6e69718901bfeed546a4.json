{"ast":null,"code":"import * as i0 from \"@angular/core\";\n/**\n * Book Service to manage books\n */\nexport class BookService {\n  constructor() {\n    // An array to store a list of books. Initialized with some example data.\n    /**\n     * Initialized Data\n     *\n     * @type {Book[]}\n     * @memberof BookService\n     */\n    this.list = [{\n      id: 1,\n      title: 'Learn Javascript',\n      author: 'Aloui Khalil',\n      editor: 'Aloui Khalil Org',\n      publishDate: new Date()\n    },\n    // More books are added below for demonstration purposes\n    {\n      id: 2,\n      title: 'Introduction to Angular',\n      author: 'Mr Nidhal',\n      editor: 'Tek-Up',\n      publishDate: new Date('2023-07-22')\n    }, {\n      id: 3,\n      title: 'Python for Beginners',\n      author: 'Mohamed Haithem Bouallegui',\n      editor: 'ABC Books',\n      publishDate: new Date('2023-07-21')\n    }, {\n      id: 4,\n      title: 'The Art of TypeScript',\n      author: 'Aloui Khalil',\n      editor: 'DEF Publishing',\n      publishDate: new Date('2023-07-20')\n    }, {\n      id: 5,\n      title: 'Java Programming',\n      author: 'Aymen Hichri',\n      editor: 'GHI Publishers',\n      publishDate: new Date('2023-07-19')\n    }];\n  }\n  /**\n   * Get a book by id\n   * @param id book id\n   * @returns\n   */\n  // Get a book by its ID from the list\n  getBookById(id) {\n    return this.list.find(book => book.id === id);\n  }\n  /**\n   * Add a new book to the list\n   * @param book\n   * @returns\n   */\n  // Add a new book to the list\n  addBook(book) {\n    this.list.push({\n      ...book,\n      publishDate: new Date()\n    });\n    return this.list;\n  }\n  filterBookById(id) {\n    return this.list.filter(_book => _book.id !== id);\n  }\n  deleteBook(id) {\n    const books = this.filterBookById(id);\n    this.list = books;\n    return books;\n  }\n  /**\n   * Updates specific book\n   * @param book\n   */\n  updateBook(book) {\n    // get the list without the updated book\n    const books = this.filterBookById(book.id);\n    // add the book to the new list.\n    this.list = [...books, book];\n  }\n}\nBookService.ɵfac = function BookService_Factory(t) {\n  return new (t || BookService)();\n};\nBookService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BookService,\n  factory: BookService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BookService","constructor","list","id","title","author","editor","publishDate","Date","getBookById","find","book","addBook","push","filterBookById","filter","_book","deleteBook","books","updateBook","factory","ɵfac","providedIn"],"sources":["C:\\Users\\SP-Aloui\\Documents\\Studies\\angular\\angular-tekup-book-crud-main\\src\\app\\services\\book.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Book } from '../models/book';\n\n/**\n * Book Service to manage books\n */\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BookService {\n  constructor() {}\n\n\n  // An array to store a list of books. Initialized with some example data.\n\n  /**\n   * Initialized Data\n   *\n   * @type {Book[]}\n   * @memberof BookService\n   */\n  list: Book[] = [\n    {\n      id: 1,\n      title: 'Learn Javascript',\n      author: 'Aloui Khalil',\n      editor: 'Aloui Khalil Org',\n      publishDate: new Date(),\n    },\n    // More books are added below for demonstration purposes\n    {\n      id: 2,\n      title: 'Introduction to Angular',\n      author: 'Mr Nidhal',\n      editor: 'Tek-Up',\n      publishDate: new Date('2023-07-22'),\n    },\n    {\n      id: 3,\n      title: 'Python for Beginners',\n      author: 'Mohamed Haithem Bouallegui',\n      editor: 'ABC Books',\n      publishDate: new Date('2023-07-21'),\n    },\n    {\n      id: 4,\n      title: 'The Art of TypeScript',\n      author: 'Aloui Khalil',\n      editor: 'DEF Publishing',\n      publishDate: new Date('2023-07-20'),\n    },\n    {\n      id: 5,\n      title: 'Java Programming',\n      author: 'Aymen Hichri',\n      editor: 'GHI Publishers',\n      publishDate: new Date('2023-07-19'),\n    },\n  ];\n\n\n \n\n  /**\n   * Get a book by id\n   * @param id book id\n   * @returns\n   */\n\n // Get a book by its ID from the list\n\n  getBookById(id: number) {\n    return this.list.find((book) => book.id === id);\n  }\n\n  /**\n   * Add a new book to the list\n   * @param book\n   * @returns\n   */\n\n  // Add a new book to the list\n\n  addBook(book: Book) {\n    this.list.push({ ...book, publishDate: new Date() });\n    return this.list;\n  }\n\n  filterBookById(id: number) {\n    return this.list.filter((_book) => _book.id !== id);\n  }\n\n  deleteBook(id: number) {\n    const books = this.filterBookById(id);\n    this.list = books;\n    return books;\n  }\n\n  /**\n   * Updates specific book\n   * @param book\n   */\n  updateBook(book: Book) {\n    // get the list without the updated book\n    const books = this.filterBookById(book.id);\n    // add the book to the new list.\n    this.list = [...books, book];\n  }\n}\n"],"mappings":";AAGA;;;AAOA,OAAM,MAAOA,WAAW;EACtBC,YAAA;IAGA;IAEA;;;;;;IAMA,KAAAC,IAAI,GAAW,CACb;MACEC,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,kBAAkB;MACzBC,MAAM,EAAE,cAAc;MACtBC,MAAM,EAAE,kBAAkB;MAC1BC,WAAW,EAAE,IAAIC,IAAI;KACtB;IACD;IACA;MACEL,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,yBAAyB;MAChCC,MAAM,EAAE,WAAW;MACnBC,MAAM,EAAE,QAAQ;MAChBC,WAAW,EAAE,IAAIC,IAAI,CAAC,YAAY;KACnC,EACD;MACEL,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,sBAAsB;MAC7BC,MAAM,EAAE,4BAA4B;MACpCC,MAAM,EAAE,WAAW;MACnBC,WAAW,EAAE,IAAIC,IAAI,CAAC,YAAY;KACnC,EACD;MACEL,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,uBAAuB;MAC9BC,MAAM,EAAE,cAAc;MACtBC,MAAM,EAAE,gBAAgB;MACxBC,WAAW,EAAE,IAAIC,IAAI,CAAC,YAAY;KACnC,EACD;MACEL,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,kBAAkB;MACzBC,MAAM,EAAE,cAAc;MACtBC,MAAM,EAAE,gBAAgB;MACxBC,WAAW,EAAE,IAAIC,IAAI,CAAC,YAAY;KACnC,CACF;EAhDc;EAqDf;;;;;EAMD;EAECC,WAAWA,CAACN,EAAU;IACpB,OAAO,IAAI,CAACD,IAAI,CAACQ,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACR,EAAE,KAAKA,EAAE,CAAC;EACjD;EAEA;;;;;EAMA;EAEAS,OAAOA,CAACD,IAAU;IAChB,IAAI,CAACT,IAAI,CAACW,IAAI,CAAC;MAAE,GAAGF,IAAI;MAAEJ,WAAW,EAAE,IAAIC,IAAI;IAAE,CAAE,CAAC;IACpD,OAAO,IAAI,CAACN,IAAI;EAClB;EAEAY,cAAcA,CAACX,EAAU;IACvB,OAAO,IAAI,CAACD,IAAI,CAACa,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACb,EAAE,KAAKA,EAAE,CAAC;EACrD;EAEAc,UAAUA,CAACd,EAAU;IACnB,MAAMe,KAAK,GAAG,IAAI,CAACJ,cAAc,CAACX,EAAE,CAAC;IACrC,IAAI,CAACD,IAAI,GAAGgB,KAAK;IACjB,OAAOA,KAAK;EACd;EAEA;;;;EAIAC,UAAUA,CAACR,IAAU;IACnB;IACA,MAAMO,KAAK,GAAG,IAAI,CAACJ,cAAc,CAACH,IAAI,CAACR,EAAE,CAAC;IAC1C;IACA,IAAI,CAACD,IAAI,GAAG,CAAC,GAAGgB,KAAK,EAAEP,IAAI,CAAC;EAC9B;;AAlGWX,WAAW,C;mBAAXA,WAAW;AAAA;AAAXA,WAAW,C;SAAXA,WAAW;EAAAoB,OAAA,EAAXpB,WAAW,CAAAqB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}