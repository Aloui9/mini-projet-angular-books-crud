{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/book.service\";\nimport * as i3 from \"@angular/forms\";\nexport class EditComponent {\n  constructor(actRoute,\n  // Used to retrieve route parameters\n  router,\n  // Used for navigation between routes\n  bookService // Service to interact with book data\n  ) {\n    this.actRoute = actRoute;\n    this.router = router;\n    this.bookService = bookService;\n    // Initialize a new book object with default values.\n    this.book = {\n      id: -1,\n      title: '',\n      author: '',\n      editor: '',\n      publishDate: new Date()\n    };\n  }\n  ngOnInit() {\n    // Subscribe to changes in the route parameters (bookId)\n    this.actRoute.paramMap.subscribe(params => {\n      // Get the 'bookId' param passed from the other route.\n      const id = params.get('bookId');\n      // The id needs to be converted to a number.\n      const book = this.bookService.getBookById(Number(id));\n      if (book) {\n        // If the book with the specified ID is found, update the 'book' property.\n        this.book = book;\n        return;\n      }\n      // If the book with the specified ID is not found, navigate to the 'list' route.\n      this.router.navigate(['/list']);\n    });\n  }\n  // Method to edit a book.\n  edit() {\n    // Object destructuring to ensure that the 'id' is a number.\n    const newBook = {\n      ...this.book,\n      id: Number(this.book.id)\n    };\n    // Update the actual book using the BookService.\n    this.bookService.updateBook(newBook);\n    // Navigate back to the 'list' route.\n    this.back();\n  }\n  // Method to navigate back to the 'list' route.\n  back() {\n    this.router.navigate(['/list']);\n  }\n}\nEditComponent.ɵfac = function EditComponent_Factory(t) {\n  return new (t || EditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.BookService));\n};\nEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditComponent,\n  selectors: [[\"app-edit\"]],\n  decls: 22,\n  vars: 3,\n  consts: [[1, \"my-4\", \"mx-auto\", \"container\"], [1, \"text-3xl\", \"my-4\"], [\"f\", \"ngForm\"], [1, \"grid\", \"gap-6\", \"mb-6\", \"md:grid-cols-2\", \"p-2\"], [\"for\", \"\", 1, \"block\", \"mb-2\", \"text-sm\", \"font-medium\", \"text-gray-900\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"title\", 1, \"bg-gray-50\", \"border\", \"border-gray-300\", \"text-gray-900\", \"text-sm\", \"rounded-lg\", \"focus:ring-blue-500\", \"focus:border-blue-500\", \"block\", \"w-full\", \"p-2.5\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"author\", 1, \"bg-gray-50\", \"border\", \"border-gray-300\", \"text-gray-900\", \"text-sm\", \"rounded-lg\", \"focus:ring-blue-500\", \"focus:border-blue-500\", \"block\", \"w-full\", \"p-2.5\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"editor\", 1, \"bg-gray-50\", \"border\", \"border-gray-300\", \"text-gray-900\", \"text-sm\", \"rounded-lg\", \"focus:ring-blue-500\", \"focus:border-blue-500\", \"block\", \"w-full\", \"p-2.5\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"mx-2\", \"text-white\", \"bg-blue-700\", \"hover:bg-blue-800\", \"focus:ring-4\", \"focus:ring-blue-300\", \"font-medium\", \"rounded-lg\", \"text-sm\", \"px-5\", \"py-2.5\", \"mr-2\", \"mb-2\", \"dark:bg-blue-600\", \"dark:hover:bg-blue-700\", \"focus:outline-none\", \"dark:focus:ring-blue-800\", 3, \"click\"]],\n  template: function EditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n      i0.ɵɵtext(2, \"Edit a book\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", null, 2)(5, \"div\", 3)(6, \"div\")(7, \"label\", 4);\n      i0.ɵɵtext(8, \" title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function EditComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.book.title = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\")(11, \"label\", 4);\n      i0.ɵɵtext(12, \" Author\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function EditComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.book.author = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\")(15, \"label\", 4);\n      i0.ɵɵtext(16, \" Editor\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function EditComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.book.editor = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(18, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function EditComponent_Template_button_click_18_listener() {\n        return ctx.edit();\n      });\n      i0.ɵɵtext(19, \" Save \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function EditComponent_Template_button_click_20_listener() {\n        return ctx.back();\n      });\n      i0.ɵɵtext(21, \" Back \");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.book.title);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.book.author);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.book.editor);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\".container[_ngcontent-%COMP%]{\\n    max-width: 760px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVkaXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJlZGl0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVye1xyXG4gICAgbWF4LXdpZHRoOiA3NjBweDtcclxufSJdfQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZWRpdC9lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7QUFDcEI7QUFDQSw0U0FBNFMiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVye1xyXG4gICAgbWF4LXdpZHRoOiA3NjBweDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["EditComponent","constructor","actRoute","router","bookService","book","id","title","author","editor","publishDate","Date","ngOnInit","paramMap","subscribe","params","get","getBookById","Number","navigate","edit","newBook","updateBook","back","i0","ɵɵdirectiveInject","i1","ActivatedRoute","Router","i2","BookService","selectors","decls","vars","consts","template","EditComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","EditComponent_Template_input_ngModelChange_9_listener","$event","EditComponent_Template_input_ngModelChange_13_listener","EditComponent_Template_input_ngModelChange_17_listener","EditComponent_Template_button_click_18_listener","EditComponent_Template_button_click_20_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\SP-Aloui\\Documents\\Studies\\angular\\angular-tekup-book-crud-main\\src\\app\\edit\\edit.component.ts","C:\\Users\\SP-Aloui\\Documents\\Studies\\angular\\angular-tekup-book-crud-main\\src\\app\\edit\\edit.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Book } from '../models/book';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BookService } from '../services/book.service';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css'],\n})\nexport class EditComponent {\n\n  // Initialize a new book object with default values.\n\n  book: Book = {\n    id: -1,\n    title: '',\n    author: '',\n    editor: '',\n    publishDate: new Date(),\n  };\n  constructor(\n    private actRoute: ActivatedRoute, // Used to retrieve route parameters\n    private router: Router, // Used for navigation between routes\n    private bookService: BookService // Service to interact with book data\n  ) {}\n\n  ngOnInit() {\n    // Subscribe to changes in the route parameters (bookId)\n    this.actRoute.paramMap.subscribe((params) => {\n      // Get the 'bookId' param passed from the other route.\n      const id = params.get('bookId');\n      // The id needs to be converted to a number.\n      const book = this.bookService.getBookById(Number(id));\n      if (book) {\n        // If the book with the specified ID is found, update the 'book' property.\n        this.book = book;\n        return;\n      }\n      // If the book with the specified ID is not found, navigate to the 'list' route.\n      this.router.navigate(['/list']);\n    });\n  }\n\n  // Method to edit a book.\n  edit() {\n    // Object destructuring to ensure that the 'id' is a number.\n    const newBook = {\n      ...this.book,\n      id: Number(this.book.id),\n    };\n    // Update the actual book using the BookService.\n    this.bookService.updateBook(newBook);\n    // Navigate back to the 'list' route.\n    this.back();\n  }\n\n  // Method to navigate back to the 'list' route.\n  back(){\n    this.router.navigate(['/list']);\n  }\n}\n","<div class=\"my-4 mx-auto container\">\n  <!-- Heading for the Edit book page -->\n  <h2 class=\"text-3xl my-4\">Edit a book</h2>\n  <form #f=\"ngForm\">\n    <!-- Grid layout for input fields -->\n    <div class=\"grid gap-6 mb-6 md:grid-cols-2 p-2\">\n      <!-- Input field for the book title -->\n      <div>\n        <label for=\"\" class=\"block mb-2 text-sm font-medium text-gray-900\">\n          title</label>\n        <!-- Input field for book title with two-way data binding (ngModel) -->\n        <input\n          type=\"text\"\n          class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\n          ngModel\n          [(ngModel)]=\"book.title\"\n          name=\"title\"\n        />\n      </div>\n\n      <!-- Input field for the book author -->\n      <div>\n        <label for=\"\" class=\"block mb-2 text-sm font-medium text-gray-900\">\n          Author</label>\n        <!-- Input field for book author with two-way data binding (ngModel) -->\n        <input\n          type=\"text\"\n          class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\n          ngModel\n          [(ngModel)]=\"book.author\"\n          name=\"author\"\n        />\n      </div>\n      <!-- Input field for the book editor -->\n      <div>\n        <label for=\"\" class=\"block mb-2 text-sm font-medium text-gray-900\">\n          Editor</label>\n        <!-- Input field for book editor with two-way data binding (ngModel) -->\n        <input\n          type=\"text\"\n          class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\n          ngModel\n          name=\"editor\"\n          [(ngModel)]=\"book.editor\"\n        />\n      </div>\n    </div>\n\n    <!-- Button to save the edited book -->\n    <button\n      class=\"mx-2 text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800\"\n      type=\"submit\"\n      (click)=\"edit()\"\n    >\n      Save\n    </button>\n\n    <!-- Button to navigate back -->\n    <button\n      class=\"mx-2 text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800\"\n      type=\"submit\"\n      (click)=\"back()\"\n    >\n      Back\n    </button>\n  </form>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}